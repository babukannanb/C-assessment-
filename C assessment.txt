1.multiple lines in a text file 

#include <stdio.h>
int main ()
{
FILE *fptr;
int i,n;
char str[100];
char fname[20]="test.txt";
char str1;
printf("\n\n Write multiple lines in a text file and read the file :\n");
printf(" Input the number of lines to be written : ");
scanf("%d", &n);
fptr = fopen (fname,"w");
for(i = 0; i < n+1;i++) //loop to write the character in next line
{
fgets(str, sizeof str, stdin);  // read the character  and store it in str
fputs(str, fptr); // print the stored string in str pointed by fptr
}
fclose (fptr);
fptr = fopen (fname, "r");
printf("\n The content of the file %s is  :\n",fname);
str1 = fgetc(fptr); // read the file pointed by fptr
while (str1 != EOF) // loop until end of file
{
printf ("%c", str1); //print the string which is present in str1
str1 = fgetc(fptr); // get the next char store in str1
}
printf("\n\n");
fclose (fptr);
return 0;

Write multiple lines in a text file and read the file :
 Input the number of lines to be written : 3
bat
ball
stump

 The content of the file test.txt is  :

bat
ball
stump



Process returned 0 (0x0)   execution time : 20.080 s
Press any key to continue.

2.count the number of words and characters from a file 

#include <stdio.h>
#include <stdlib.h>
void main()
{
FILE *fptr;
char ch;
int word=0,character=0;
char fname[20];
printf("\n\n Count the number of words and characters in a file :\n");
printf(" Input the filename to be opened : ");
scanf("%s",fname);
fptr=fopen(fname,"r");//open the file in read mode
if(fptr==NULL)
{
printf(" File does not exist or can not be opened.");
}
else
{
ch=fgetc(fptr); //get the character from the pointing file and store it in ch
printf(" The content of the file %s are : ",fname);
while(ch!=EOF) // loop until the end of file
{
printf("%c",ch);//updated character to check
if(ch==' '||ch=='\n')
{
word++;
}
else
{
character++;
}
ch=fgetc(fptr);//to get the next character from the file
}
        printf("\n The number of words in the  file %s are : %d\n",fname,word-1);
        printf(" The number of characters in the  file %s are : %d\n\n",fname,character);
        }
    fclose(fptr);
}


Count the number of words and characters in a file :
 Input the filename to be opened : test.txt
 The content of the file test.txt are : i love coding in c language

 The number of words in the  file test.txt are : 6
 The number of characters in the  file test.txt are : 22


Process returned 0 (0x0)   execution time : 11.876 s
Press any key to continue.


3.merge the two files in to new file


#include <stdio.h>
#include <stdlib.h>
void main()
{
FILE *fptr1, *fptr2, *fptr3;
char ch, fname1[20], fname2[20], fname3[30];

	printf(" Merge two files and write it in a new file :\n");
	printf(" Input the 1st file name : ");
	scanf("%s",fname1);
	printf(" Input the 2nd file name : ");
	scanf("%s",fname2);
	printf(" Input the new file name where to merge the above two files : ");
	scanf("%s",fname3);
	fptr1=fopen(fname1, "r");//open the first file in read mode
	fptr2=fopen(fname2, "r");//open the second file in read mode
	if(fptr1==NULL || fptr2==NULL)
	{
		printf(" file does not exist  \n");
		exit(1);
	}
	fptr3=fopen(fname3, "w"); //open the new file in write mode
	if(fptr3==NULL)
	{
		printf(" File does not exist \n");
		exit(1);
	}
	while((ch=fgetc(fptr1))!=EOF)// read the character from first file and store in ch
	{
		fputc(ch, fptr3);// print the stored character in new file
	}
	while((ch=fgetc(fptr2))!=EOF)//read the character from second file and store in ch
	{
		fputc(ch, fptr3);//print the stored character in new file
	}
	printf(" The two files merged into %s file \n", fname3);
	fclose(fptr1);
	fclose(fptr2);
	fclose(fptr3);
}

 Merge two files and write it in a new file :
 Input the 1st file name : babu.txt
 Input the 2nd file name : madan.txt
 Input the new file name where to merge the above two files : mirthun.txt
 The two files merged into mirthun.txt file

Process returned 0 (0x0)   execution time : 20.168 s
Press any key to continue.


4.remove the file from the disk

#include <stdio.h>
void main()
{
int result;
char fname[20];
printf("\n Remove a file from the disk :\n");
printf(" Input the name of file to delete : ");
scanf("%s",fname);
result=remove(fname);// remove function is used to remove the file from the disk and returns 0 if removed
if(result ==0)
{
printf(" The file %s is deleted successfully\n",fname);
}
else
{
printf(" Unable to delete file %s \n",fname);
}
}

Remove a file from the disk :
 Input the name of file to delete : mirthun.txt
 The file mirthun.txt is deleted successfully

Process returned 46 (0x2E)   execution time : 9.066 s
Press any key to continue.


5.create and store inforamation in a text file 

#include <stdio.h>
#include <stdlib.h>
int main()
{
char str[1000];
FILE *fptr;
char fname[20]="test.txt";
printf("\n\n Create a file (test.txt) and input text :\n");
fptr=fopen(fname,"w");//open the file in write mode
if(fptr==NULL)
{
printf(" Error in opening file!");
exit(1);
}
printf(" Input a sentence for the file : ");
fgets(str, sizeof str, stdin); //read the input from user and store it in str
fputs(str,fptr);// print it in file which file pointer points
fclose(fptr);
printf("\n The file %s created successfully...!!\n\n",fname);
return 0;
}


 Create a file (test.txt) and input text :
 Input a sentence for the file : i love msdhoni

 The file test.txt created successfully...!!


Process returned 0 (0x0)   execution time : 12.243 s
Press any key to continue.



